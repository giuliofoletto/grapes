name: Create Release on Tag

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-testpypi:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build sdist and wheel
        run: python -m build --sdist --wheel

      - name: Upload dist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist

      - name: Publish to Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*

  test-installed-package:
    name: Install from TestPyPI and run tests
    needs: publish-testpypi
    runs-on: ubuntu-latest
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install test runner
        run: python -m pip install --upgrade pip pytest

      - name: Install binary dependencies
        run: sudo apt-get install -y graphviz

      - name: Install package built in previous job (local) and use PyPI for deps
        run: |
          python -m pip install --upgrade pip
          echo "Installing grapes from local distribution files in ./dist"
          set -e
          # Prefer wheel if available, otherwise fall back to sdist.
          wheel=$(ls dist/*.whl 2>/dev/null || true)
          if [ -n "$wheel" ]; then
            echo "Found wheel: $wheel"
            python -m pip install "$wheel"
          else
            sdist=$(ls dist/*.tar.gz 2>/dev/null || ls dist/*.zip 2>/dev/null || true)
            if [ -n "$sdist" ]; then
              echo "Found sdist: $sdist"
              python -m pip install "$sdist"
            else
              echo "No distribution files found in dist/" >&2
              exit 1
            fi
          fi

      - name: Run test suite
        run: pytest -q
